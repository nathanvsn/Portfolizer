name: Build and Deploy Python Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    name: Build and Start Containers
    environment:
      name: PRODUCTION

    steps:
      - uses: actions/checkout@v4

      - name: Stop existing containers
        run: docker-compose down
      
      - name: Touch on /app .env file
        run: |
          cat <<EOF > .env
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          DEBUG=${{ vars.DEBUG }}
          ALLOWED_HOSTS=${{ vars.ALLOWED_HOSTS }}
          CSRF_TRUSTED_ORIGINS=${{ vars.CSRF_TRUSTED_ORIGINS }}
          FRONTEND_URL=${{ vars.FRONTEND_URL }}
          PARENT_HOST=${{ vars.PARENT_HOST }}
          EMAIL_HOST_USER=${{ vars.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
          EOF
        env:
            DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
            DEBUG: ${{ vars.DEBUG }}
            ALLOWED_HOSTS: ${{ vars.ALLOWED_HOSTS }}
            CSRF_TRUSTED_ORIGINS: ${{ vars.CSRF_TRUSTED_ORIGINS }}
            FRONTEND_URL: ${{ vars.FRONTEND_URL }}
            PARENT_HOST: ${{ vars.PARENT_HOST }}
            EMAIL_HOST_USER: ${{ vars.EMAIL_HOST_USER }}
            EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

      - name: Build and start containers with environment variables
        run: docker-compose up --build -d

  test-connection:
    runs-on: self-hosted
    needs: build
    name: Deploy and Validate
    environment:
      name: PRODUCTION
  
    steps:
      - name: Wait for Django Server to be ready
        run: |
          until curl -s -o /dev/null -w "%{http_code}" ${{ vars.FRONTEND_URL }} | grep -q "200"; do
            echo "Waiting for Django server..."
            sleep 5
          done
